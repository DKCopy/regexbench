include_directories(SYSTEM ${Boost_INCLUDE_DIRS})
include_directories(SYSTEM ${PCAP_INCLUDE_DIR})

set(ENGINE_SRCS Engine.cpp)
if(HYPERSCAN_INCLUDE_DIR)
  include_directories(SYSTEM ${HYPERSCAN_INCLUDE_DIR})
  set(ENGINE_SRCS ${ENGINE_SRCS} HyperscanEngine.cpp)
endif()
if(PCRE2_INCLUDE_DIR)
  include_directories(SYSTEM ${PCRE2_INCLUDE_DIR})
  set(ENGINE_SRCS ${ENGINE_SRCS} PCRE2Engine.cpp)
endif()
if(REMATCH_INCLUDE_DIR)
  include_directories(SYSTEM ${REMATCH_INCLUDE_DIR})
  set(ENGINE_SRCS ${ENGINE_SRCS} REmatchEngine.cpp)
endif()
if(RE2_INCLUDE_DIR)
  include_directories(SYSTEM ${RE2_INCLUDE_DIR})
  set(ENGINE_SRCS ${ENGINE_SRCS} RE2Engine.cpp)
endif()

set(ENGINE_SRCS ${ENGINE_SRCS} CPPEngine.cpp BoostEngine.cpp)

add_library(engines ${ENGINE_SRCS})

find_library(DL_LIB NAMES dl)

add_executable(regexbench
  match.cpp PcapSource.cpp regexbench.cpp Rule.cpp Session.cpp)
target_link_libraries(regexbench
  engines ${Boost_LIBRARIES} ${PCAP_LIB} ${DL_LIB})
if(HYPERSCAN_LIB)
  target_link_libraries(regexbench ${HYPERSCAN_LIB})
endif()
if(PCRE2_LIB)
  target_link_libraries(regexbench ${PCRE2_LIB})
endif()
if(REMATCHCOMP_LIB)
  target_link_libraries(regexbench ${REMATCHCOMP_LIB} ${REMATCHEXEC_LIB})
endif()
if(RE2_LIB)
  target_link_libraries(regexbench ${RE2_LIB})
endif()
